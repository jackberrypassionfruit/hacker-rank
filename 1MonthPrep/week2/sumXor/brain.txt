idea - Xor basically uses 1s to flip bits in placefrom what they were
    0 & "0" -> 0
    0 & "1" -> 1
    1 & "0" -> 1
    1 & "1" => 0
    and luckily, it works just like additions of both binary number if:
      1) you don't have a 1 in the same digit place at any place in both numbers (two 0s are fine)
        -this is because adding them would involve carrying over value, and bitwise Xor doesn't have that effect
    I can exploit this by saying 
      - "if at any point in the 2 binary numbers, they have a 1 in the same place, 
        they would not add digitally to the same value"

    I will check this by:
    1) converting the digital numebrs to binary, but not really
    2) as I do this, I will check that they aren't both 1
    3) if they are, skip and check the next number (1-> 2)